{"version":3,"sources":["components/TodoComponents/Todo.js","components/TodoComponents/TodoList.js","components/TodoComponents/TodoForm.js","App.js","index.js"],"names":["Todo","props","className","item","completed","onClick","toggleItem","id","name","TodoList","todo","map","key","clearList","TodoForm","handleChanges","e","setState","todoText","target","value","handleSubmit","preventDefault","addItem","state","onSubmit","this","type","onChange","React","Component","App","newTodoList","todoList","itemName","newItem","Date","now","filter","anotherTodo","life","render","document","getElementById"],"mappings":"iQAaeA,EAXF,SAAAC,GACT,OACI,yBACEC,UAAS,cAASD,EAAME,KAAKC,UAAY,aAAe,IACxDC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAME,KAAKI,MAE3C,2BAAIN,EAAME,KAAKK,QCSVC,EAbE,SAAAR,GACb,OACI,yBAAKC,UAAU,iBAChBD,EAAMS,KAAKC,KAAI,SAAAR,GAAI,OAClB,kBAAC,EAAD,CAAMS,IAAKT,EAAKI,GAAIJ,KAAMA,EAAMG,WAAYL,EAAMK,gBAEpD,4BAAQJ,UAAU,YAAYG,QAASJ,EAAMY,WAA7C,+BC2BSC,E,YAjCX,aAAe,IAAD,8BACV,+CAMJC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CACVC,SAAUF,EAAEG,OAAOC,SATb,EAadC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKrB,MAAMsB,QAAQ,EAAKC,MAAMN,WAb9B,EAAKM,MAAQ,CACTN,SAAU,IAHJ,E,sEAmBV,OACE,0BAAMO,SAAUC,KAAKL,cACjB,2BACAM,KAAK,OACLnB,KAAK,OACLY,MAAOM,KAAKF,MAAMN,SAClBU,SAAUF,KAAKX,gBAEf,iD,GA7BSc,IAAMC,WCEvBpB,G,MAAO,CACX,CACEF,KAAM,kBACND,GAAI,IACJH,WAAW,KAwEA2B,E,YAlEb,aAAe,IAAD,8BACZ,+CAOFzB,WAAa,SAAAC,GAIX,IAAMyB,EAAc,EAAKR,MAAMS,SAAStB,KAAI,SAAAR,GAC1C,OAAIA,EAAKI,KAAOA,EACP,eACFJ,EADL,CAEEC,WAAYD,EAAKC,YAGZD,KAIX,EAAKc,SAAS,CACZgB,SAAUD,KAxBA,EA4BdT,QAAU,SAAAW,GACR,IAAMC,EAAU,CACd3B,KAAM0B,EACN3B,GAAI6B,KAAKC,MACTjC,WAAW,GAEb,EAAKa,SAAS,CACZgB,SAAS,GAAD,mBAAM,EAAKT,MAAMS,UAAjB,CAA2BE,OAnCzB,EAuCdtB,UAAY,SAAAG,GACVA,EAAEM,iBACF,EAAKL,SAAS,CACZgB,SAAU,EAAKT,MAAMS,SAASK,QAAO,SAAA5B,GAAI,OAAuB,IAAnBA,EAAKN,gBAxCpD,EAAKoB,MAAO,CACVS,SAAUvB,EACV6B,YAAa,GACbC,KAAM,IALI,E,sEAiDZ,OACE,yBAAKtC,UAAU,OACX,yBAAKA,UAAU,UACjB,yDACA,kBAAC,EAAD,CAAUqB,QAASG,KAAKH,WAE1B,kBAAC,EAAD,CACIb,KAAMgB,KAAKF,MAAMS,SACjB3B,WAAYoB,KAAKpB,WACjBO,UAAWa,KAAKb,iB,GA5DRiB,aCRlBW,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c382da17.chunk.js","sourcesContent":["import React from 'react';\n\nconst Todo = props => {\n    return (\n        <div\n          className={`item${props.item.completed ? ' completed' : ''}`}\n          onClick={() => props.toggleItem(props.item.id)}\n        >\n          <p>{props.item.name}</p>\n        </div>\n      );\n};\n\nexport default Todo;","// your components will all go in this `component` directory.\n// feel free to change this component.js into TodoList.js\nimport React from 'react';\nimport Todo from './Todo';\nconst TodoList = props => {\n    return (\n        <div className=\"shopping-list\">\n      {props.todo.map(item => (\n        <Todo key={item.id} item={item} toggleItem={props.toggleItem} />\n      ))}\n      <button className=\"clear-btn\" onClick={props.clearList}>\n        Clear Completed Todo List\n      </button>\n    </div>\n    )\n}\n\nexport default TodoList;\n","import React from 'react';\n\nclass TodoForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            todoText: ''\n        };\n    }\n\n    handleChanges = e => {\n        this.setState({\n            todoText: e.target.value\n        });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.addItem(this.state.todoText);\n    };\n\n    render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n              <input\n              type=\"text\"\n              name=\"item\"\n              value={this.state.todoText}\n              onChange={this.handleChanges}\n              />\n              <button>Add Item</button>\n          </form>  \n        );\n    }\n}\n\nexport default TodoForm;","import React, {Component} from 'react';\nimport TodoList from './components/TodoComponents/TodoList'\nimport TodoForm from './components/TodoComponents/TodoForm'\nimport './components/TodoComponents/Todo.css';\nconst todo = [\n  {\n    name: 'Finish ToDo App',\n    id: 123,\n    completed: false\n\n  }\n ];\nclass App extends Component {\n  // you will need a place to store your state in this component.\n  constructor() {\n    super();\n    this.state ={\n      todoList: todo,\n      anotherTodo: '',\n      life: 42\n    }\n  }\n  toggleItem = id => {\n    // find the item we clicked on\n    // toggle the completed field\n    // update state with the new list data\n    const newTodoList = this.state.todoList.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          completed: !item.completed\n        };\n      } else {\n        return item;\n      }\n    });\n    // update groceryList\n    this.setState({\n      todoList: newTodoList\n    });\n  };\n\n  addItem = itemName => {\n    const newItem = {\n      name: itemName,\n      id: Date.now(),\n      completed: false\n    };\n    this.setState({\n      todoList: [...this.state.todoList, newItem]\n    });\n  };\n\n  clearList = e => {\n    e.preventDefault();\n    this.setState({\n      todoList: this.state.todoList.filter(todo => todo.completed !== true)\n    })\n  }\n\n  // design `App` to be the parent component of your application.\n  // this component is going to take care of state, and any change handlers you need to work with your state\n  render() {\n    return (\n      <div className=\"App\">\n          <div className=\"header\">\n        <h2>Welcome to your Todo App!</h2>\n        <TodoForm addItem={this.addItem} />\n      </div>\n      <TodoList\n          todo={this.state.todoList}\n          toggleItem={this.toggleItem}\n          clearList={this.clearList}\n        />\n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}